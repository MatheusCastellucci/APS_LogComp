Terminals unused in grammar

    STRING
    INPUT


State 32 conflicts: 1 shift/reduce
State 87 conflicts: 11 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: ε
    3           | statement statements

    4 statement: variable_declaration
    5          | assignment
    6          | function_declaration
    7          | control_structure
    8          | expression_statement
    9          | print_statement
   10          | return_statement
   11          | SEMICOLON

   12 variable_declaration: LET IDENTIFIER SEMICOLON
   13                     | LET IDENTIFIER IS expression SEMICOLON

   14 assignment: IDENTIFIER IS expression SEMICOLON

   15 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END

   16 parameter_list_opt: ε
   17                   | parameter_list

   18 parameter_list: IDENTIFIER
   19               | IDENTIFIER COMMA parameter_list

   20 control_structure: if_statement
   21                  | while_loop
   22                  | for_loop

   23 if_statement: IF expression statements else_clause END

   24 else_clause: ELSE statements
   25            | ε

   26 while_loop: WHILE expression statements END

   27 for_loop: FOR IDENTIFIER IN expression statements END

   28 expression_statement: expression SEMICOLON

   29 print_statement: PRINT expression SEMICOLON

   30 return_statement: RETURN expression SEMICOLON

   31 expression: expression PLUS expression
   32           | expression MINUS expression
   33           | expression TIMES expression
   34           | expression DIVIDED_BY expression
   35           | expression EQUALS expression
   36           | expression NOT_EQUALS expression
   37           | expression GREATER_THAN expression
   38           | expression LESS_THAN expression
   39           | expression GREATER_OR_EQUAL expression
   40           | expression LESS_OR_EQUAL expression
   41           | expression AND expression
   42           | expression OR expression
   43           | NOT expression
   44           | MINUS expression
   45           | LPAREN expression RPAREN
   46           | NUMBER
   47           | IDENTIFIER
   48           | function_call

   49 function_call: IDENTIFIER LPAREN argument_list_opt RPAREN

   50 argument_list_opt: ε
   51                  | argument_list

   52 argument_list: expression
   53              | expression COMMA argument_list


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUMBER <intVal> (258) 46
    STRING <strVal> (259)
    IDENTIFIER <strVal> (260) 12 13 14 15 18 19 27 47 49
    LET (261) 12 13
    IS (262) 13 14
    IF (263) 23
    ELSE (264) 24
    WHILE (265) 26
    FOR (266) 27
    IN (267) 27
    FUNCTION (268) 15
    END (269) 15 23 26 27
    RETURN (270) 30
    PRINT (271) 29
    INPUT (272)
    PLUS (273) 31
    MINUS (274) 32 44
    TIMES (275) 33
    DIVIDED_BY (276) 34
    EQUALS (277) 35
    NOT_EQUALS (278) 36
    GREATER_THAN (279) 37
    LESS_THAN (280) 38
    GREATER_OR_EQUAL (281) 39
    LESS_OR_EQUAL (282) 40
    AND (283) 41
    OR (284) 42
    NOT (285) 43
    SEMICOLON (286) 11 12 13 14 28 29 30
    COMMA (287) 19 53
    LPAREN (288) 15 45 49
    RPAREN (289) 15 45 49
    UMINUS (290)


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program <statements> (37)
        on left: 1
        on right: 0
    statements <statements> (38)
        on left: 2 3
        on right: 1 3 15 23 24 26 27
    statement <statement> (39)
        on left: 4 5 6 7 8 9 10 11
        on right: 3
    variable_declaration <statement> (40)
        on left: 12 13
        on right: 4
    assignment <statement> (41)
        on left: 14
        on right: 5
    function_declaration <statement> (42)
        on left: 15
        on right: 6
    parameter_list_opt <paramList> (43)
        on left: 16 17
        on right: 15
    parameter_list <paramList> (44)
        on left: 18 19
        on right: 17 19
    control_structure <statement> (45)
        on left: 20 21 22
        on right: 7
    if_statement <statement> (46)
        on left: 23
        on right: 20
    else_clause <elseClause> (47)
        on left: 24 25
        on right: 23
    while_loop <statement> (48)
        on left: 26
        on right: 21
    for_loop <statement> (49)
        on left: 27
        on right: 22
    expression_statement <statement> (50)
        on left: 28
        on right: 8
    print_statement <statement> (51)
        on left: 29
        on right: 9
    return_statement <statement> (52)
        on left: 30
        on right: 10
    expression <value> (53)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
        on right: 13 14 23 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 52 53
    function_call <value> (54)
        on left: 49
        on right: 48
    argument_list_opt <argList> (55)
        on left: 50 51
        on right: 49
    argument_list <argList> (56)
        on left: 52 53
        on right: 51 53


State 0

    0 $accept: • program $end
    1 program: • statements
    2 statements: ε •  [$end]
    3           | • statement statements
    4 statement: • variable_declaration
    5          | • assignment
    6          | • function_declaration
    7          | • control_structure
    8          | • expression_statement
    9          | • print_statement
   10          | • return_statement
   11          | • SEMICOLON
   12 variable_declaration: • LET IDENTIFIER SEMICOLON
   13                     | • LET IDENTIFIER IS expression SEMICOLON
   14 assignment: • IDENTIFIER IS expression SEMICOLON
   15 function_declaration: • FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END
   20 control_structure: • if_statement
   21                  | • while_loop
   22                  | • for_loop
   23 if_statement: • IF expression statements else_clause END
   26 while_loop: • WHILE expression statements END
   27 for_loop: • FOR IDENTIFIER IN expression statements END
   28 expression_statement: • expression SEMICOLON
   29 print_statement: • PRINT expression SEMICOLON
   30 return_statement: • RETURN expression SEMICOLON
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 2 (statements)

    program               go to state 14
    statements            go to state 15
    statement             go to state 16
    variable_declaration  go to state 17
    assignment            go to state 18
    function_declaration  go to state 19
    control_structure     go to state 20
    if_statement          go to state 21
    while_loop            go to state 22
    for_loop              go to state 23
    expression_statement  go to state 24
    print_statement       go to state 25
    return_statement      go to state 26
    expression            go to state 27
    function_call         go to state 28


State 1

   46 expression: NUMBER •

    $default  reduce using rule 46 (expression)


State 2

   14 assignment: IDENTIFIER • IS expression SEMICOLON
   47 expression: IDENTIFIER •  [PLUS, MINUS, TIMES, DIVIDED_BY, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, SEMICOLON]
   49 function_call: IDENTIFIER • LPAREN argument_list_opt RPAREN

    IS      shift, and go to state 29
    LPAREN  shift, and go to state 30

    $default  reduce using rule 47 (expression)


State 3

   12 variable_declaration: LET • IDENTIFIER SEMICOLON
   13                     | LET • IDENTIFIER IS expression SEMICOLON

    IDENTIFIER  shift, and go to state 31


State 4

   23 if_statement: IF • expression statements else_clause END
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 33
    function_call  go to state 28


State 5

   26 while_loop: WHILE • expression statements END
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 34
    function_call  go to state 28


State 6

   27 for_loop: FOR • IDENTIFIER IN expression statements END

    IDENTIFIER  shift, and go to state 35


State 7

   15 function_declaration: FUNCTION • IDENTIFIER LPAREN parameter_list_opt RPAREN statements END

    IDENTIFIER  shift, and go to state 36


State 8

   30 return_statement: RETURN • expression SEMICOLON
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 37
    function_call  go to state 28


State 9

   29 print_statement: PRINT • expression SEMICOLON
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 38
    function_call  go to state 28


State 10

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   44           | MINUS • expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 39
    function_call  go to state 28


State 11

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   43           | NOT • expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 40
    function_call  go to state 28


State 12

   11 statement: SEMICOLON •

    $default  reduce using rule 11 (statement)


State 13

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   45           | LPAREN • expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 41
    function_call  go to state 28


State 14

    0 $accept: program • $end

    $end  shift, and go to state 42


State 15

    1 program: statements •

    $default  reduce using rule 1 (program)


State 16

    2 statements: ε •  [$end, ELSE, END]
    3           | • statement statements
    3           | statement • statements
    4 statement: • variable_declaration
    5          | • assignment
    6          | • function_declaration
    7          | • control_structure
    8          | • expression_statement
    9          | • print_statement
   10          | • return_statement
   11          | • SEMICOLON
   12 variable_declaration: • LET IDENTIFIER SEMICOLON
   13                     | • LET IDENTIFIER IS expression SEMICOLON
   14 assignment: • IDENTIFIER IS expression SEMICOLON
   15 function_declaration: • FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END
   20 control_structure: • if_statement
   21                  | • while_loop
   22                  | • for_loop
   23 if_statement: • IF expression statements else_clause END
   26 while_loop: • WHILE expression statements END
   27 for_loop: • FOR IDENTIFIER IN expression statements END
   28 expression_statement: • expression SEMICOLON
   29 print_statement: • PRINT expression SEMICOLON
   30 return_statement: • RETURN expression SEMICOLON
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 2 (statements)

    statements            go to state 43
    statement             go to state 16
    variable_declaration  go to state 17
    assignment            go to state 18
    function_declaration  go to state 19
    control_structure     go to state 20
    if_statement          go to state 21
    while_loop            go to state 22
    for_loop              go to state 23
    expression_statement  go to state 24
    print_statement       go to state 25
    return_statement      go to state 26
    expression            go to state 27
    function_call         go to state 28


State 17

    4 statement: variable_declaration •

    $default  reduce using rule 4 (statement)


State 18

    5 statement: assignment •

    $default  reduce using rule 5 (statement)


State 19

    6 statement: function_declaration •

    $default  reduce using rule 6 (statement)


State 20

    7 statement: control_structure •

    $default  reduce using rule 7 (statement)


State 21

   20 control_structure: if_statement •

    $default  reduce using rule 20 (control_structure)


State 22

   21 control_structure: while_loop •

    $default  reduce using rule 21 (control_structure)


State 23

   22 control_structure: for_loop •

    $default  reduce using rule 22 (control_structure)


State 24

    8 statement: expression_statement •

    $default  reduce using rule 8 (statement)


State 25

    9 statement: print_statement •

    $default  reduce using rule 9 (statement)


State 26

   10 statement: return_statement •

    $default  reduce using rule 10 (statement)


State 27

   28 expression_statement: expression • SEMICOLON
   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 45
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54
    OR                shift, and go to state 55
    SEMICOLON         shift, and go to state 56


State 28

   48 expression: function_call •

    $default  reduce using rule 48 (expression)


State 29

   14 assignment: IDENTIFIER IS • expression SEMICOLON
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 57
    function_call  go to state 28


State 30

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN
   49              | IDENTIFIER LPAREN • argument_list_opt RPAREN
   50 argument_list_opt: ε •  [RPAREN]
   51                  | • argument_list
   52 argument_list: • expression
   53              | • expression COMMA argument_list

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    $default  reduce using rule 50 (argument_list_opt)

    expression         go to state 58
    function_call      go to state 28
    argument_list_opt  go to state 59
    argument_list      go to state 60


State 31

   12 variable_declaration: LET IDENTIFIER • SEMICOLON
   13                     | LET IDENTIFIER • IS expression SEMICOLON

    IS         shift, and go to state 61
    SEMICOLON  shift, and go to state 62


State 32

   47 expression: IDENTIFIER •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, PLUS, MINUS, TIMES, DIVIDED_BY, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   49 function_call: IDENTIFIER • LPAREN argument_list_opt RPAREN

    LPAREN  shift, and go to state 30

    LPAREN    [reduce using rule 47 (expression)]
    $default  reduce using rule 47 (expression)

    shift/reduce conflict on token LPAREN:
       47 expression: IDENTIFIER •
       49 function_call: IDENTIFIER • LPAREN argument_list_opt RPAREN
      First example: IDENTIFIER • LPAREN expression RPAREN statements else_clause END
      Shift derivation
        if_statement
        ↳ 23: expression                                                    statements else_clause END
              ↳ 48: function_call
                    ↳ 49: IDENTIFIER • argument_list_opt             RPAREN
                                       ↳ 51: argument_list
                                             ↳ 52: LPAREN expression
      Second example: expression RPAREN statements else_clause END
      Reduce derivation
        if_statement
        ↳ 23: expression RPAREN statements                else_clause END
                                ↳ 3: statement statements
                                     ↳ 8: ε



State 33

    2 statements: ε •  [ELSE, END]
    3           | • statement statements
    4 statement: • variable_declaration
    5          | • assignment
    6          | • function_declaration
    7          | • control_structure
    8          | • expression_statement
    9          | • print_statement
   10          | • return_statement
   11          | • SEMICOLON
   12 variable_declaration: • LET IDENTIFIER SEMICOLON
   13                     | • LET IDENTIFIER IS expression SEMICOLON
   14 assignment: • IDENTIFIER IS expression SEMICOLON
   15 function_declaration: • FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END
   20 control_structure: • if_statement
   21                  | • while_loop
   22                  | • for_loop
   23 if_statement: • IF expression statements else_clause END
   23             | IF expression • statements else_clause END
   26 while_loop: • WHILE expression statements END
   27 for_loop: • FOR IDENTIFIER IN expression statements END
   28 expression_statement: • expression SEMICOLON
   29 print_statement: • PRINT expression SEMICOLON
   30 return_statement: • RETURN expression SEMICOLON
   31 expression: • expression PLUS expression
   31           | expression • PLUS expression
   32           | • expression MINUS expression
   32           | expression • MINUS expression
   33           | • expression TIMES expression
   33           | expression • TIMES expression
   34           | • expression DIVIDED_BY expression
   34           | expression • DIVIDED_BY expression
   35           | • expression EQUALS expression
   35           | expression • EQUALS expression
   36           | • expression NOT_EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   37           | expression • GREATER_THAN expression
   38           | • expression LESS_THAN expression
   38           | expression • LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | • expression AND expression
   41           | expression • AND expression
   42           | • expression OR expression
   42           | expression • OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER            shift, and go to state 1
    IDENTIFIER        shift, and go to state 2
    LET               shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    PRINT             shift, and go to state 9
    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 63
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54
    OR                shift, and go to state 55
    NOT               shift, and go to state 11
    SEMICOLON         shift, and go to state 12
    LPAREN            shift, and go to state 13

    $default  reduce using rule 2 (statements)

    statements            go to state 64
    statement             go to state 16
    variable_declaration  go to state 17
    assignment            go to state 18
    function_declaration  go to state 19
    control_structure     go to state 20
    if_statement          go to state 21
    while_loop            go to state 22
    for_loop              go to state 23
    expression_statement  go to state 24
    print_statement       go to state 25
    return_statement      go to state 26
    expression            go to state 27
    function_call         go to state 28


State 34

    2 statements: ε •  [END]
    3           | • statement statements
    4 statement: • variable_declaration
    5          | • assignment
    6          | • function_declaration
    7          | • control_structure
    8          | • expression_statement
    9          | • print_statement
   10          | • return_statement
   11          | • SEMICOLON
   12 variable_declaration: • LET IDENTIFIER SEMICOLON
   13                     | • LET IDENTIFIER IS expression SEMICOLON
   14 assignment: • IDENTIFIER IS expression SEMICOLON
   15 function_declaration: • FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END
   20 control_structure: • if_statement
   21                  | • while_loop
   22                  | • for_loop
   23 if_statement: • IF expression statements else_clause END
   26 while_loop: • WHILE expression statements END
   26           | WHILE expression • statements END
   27 for_loop: • FOR IDENTIFIER IN expression statements END
   28 expression_statement: • expression SEMICOLON
   29 print_statement: • PRINT expression SEMICOLON
   30 return_statement: • RETURN expression SEMICOLON
   31 expression: • expression PLUS expression
   31           | expression • PLUS expression
   32           | • expression MINUS expression
   32           | expression • MINUS expression
   33           | • expression TIMES expression
   33           | expression • TIMES expression
   34           | • expression DIVIDED_BY expression
   34           | expression • DIVIDED_BY expression
   35           | • expression EQUALS expression
   35           | expression • EQUALS expression
   36           | • expression NOT_EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   37           | expression • GREATER_THAN expression
   38           | • expression LESS_THAN expression
   38           | expression • LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | • expression AND expression
   41           | expression • AND expression
   42           | • expression OR expression
   42           | expression • OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER            shift, and go to state 1
    IDENTIFIER        shift, and go to state 2
    LET               shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    PRINT             shift, and go to state 9
    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 63
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54
    OR                shift, and go to state 55
    NOT               shift, and go to state 11
    SEMICOLON         shift, and go to state 12
    LPAREN            shift, and go to state 13

    $default  reduce using rule 2 (statements)

    statements            go to state 65
    statement             go to state 16
    variable_declaration  go to state 17
    assignment            go to state 18
    function_declaration  go to state 19
    control_structure     go to state 20
    if_statement          go to state 21
    while_loop            go to state 22
    for_loop              go to state 23
    expression_statement  go to state 24
    print_statement       go to state 25
    return_statement      go to state 26
    expression            go to state 27
    function_call         go to state 28


State 35

   27 for_loop: FOR IDENTIFIER • IN expression statements END

    IN  shift, and go to state 66


State 36

   15 function_declaration: FUNCTION IDENTIFIER • LPAREN parameter_list_opt RPAREN statements END

    LPAREN  shift, and go to state 67


State 37

   30 return_statement: RETURN expression • SEMICOLON
   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 45
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54
    OR                shift, and go to state 55
    SEMICOLON         shift, and go to state 68


State 38

   29 print_statement: PRINT expression • SEMICOLON
   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 45
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54
    OR                shift, and go to state 55
    SEMICOLON         shift, and go to state 69


State 39

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression
   44           | MINUS expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, PLUS, MINUS, TIMES, DIVIDED_BY, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]

    $default  reduce using rule 44 (expression)

    Conflict between rule 44 and token PLUS resolved as reduce (PLUS < UMINUS).
    Conflict between rule 44 and token MINUS resolved as reduce (MINUS < UMINUS).
    Conflict between rule 44 and token TIMES resolved as reduce (TIMES < UMINUS).
    Conflict between rule 44 and token DIVIDED_BY resolved as reduce (DIVIDED_BY < UMINUS).
    Conflict between rule 44 and token EQUALS resolved as reduce (EQUALS < UMINUS).
    Conflict between rule 44 and token NOT_EQUALS resolved as reduce (NOT_EQUALS < UMINUS).
    Conflict between rule 44 and token GREATER_THAN resolved as reduce (GREATER_THAN < UMINUS).
    Conflict between rule 44 and token LESS_THAN resolved as reduce (LESS_THAN < UMINUS).
    Conflict between rule 44 and token GREATER_OR_EQUAL resolved as reduce (GREATER_OR_EQUAL < UMINUS).
    Conflict between rule 44 and token LESS_OR_EQUAL resolved as reduce (LESS_OR_EQUAL < UMINUS).
    Conflict between rule 44 and token AND resolved as reduce (AND < UMINUS).
    Conflict between rule 44 and token OR resolved as reduce (OR < UMINUS).


State 40

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression
   43           | NOT expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, PLUS, MINUS, TIMES, DIVIDED_BY, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]

    $default  reduce using rule 43 (expression)

    Conflict between rule 43 and token PLUS resolved as reduce (PLUS < NOT).
    Conflict between rule 43 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 43 and token TIMES resolved as reduce (TIMES < NOT).
    Conflict between rule 43 and token DIVIDED_BY resolved as reduce (DIVIDED_BY < NOT).
    Conflict between rule 43 and token EQUALS resolved as reduce (EQUALS < NOT).
    Conflict between rule 43 and token NOT_EQUALS resolved as reduce (NOT_EQUALS < NOT).
    Conflict between rule 43 and token GREATER_THAN resolved as reduce (GREATER_THAN < NOT).
    Conflict between rule 43 and token LESS_THAN resolved as reduce (LESS_THAN < NOT).
    Conflict between rule 43 and token GREATER_OR_EQUAL resolved as reduce (GREATER_OR_EQUAL < NOT).
    Conflict between rule 43 and token LESS_OR_EQUAL resolved as reduce (LESS_OR_EQUAL < NOT).
    Conflict between rule 43 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 43 and token OR resolved as reduce (OR < NOT).


State 41

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression
   45           | LPAREN expression • RPAREN

    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 45
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54
    OR                shift, and go to state 55
    RPAREN            shift, and go to state 70


State 42

    0 $accept: program $end •

    $default  accept


State 43

    3 statements: statement statements •

    $default  reduce using rule 3 (statements)


State 44

   31 expression: • expression PLUS expression
   31           | expression PLUS • expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 71
    function_call  go to state 28


State 45

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   32           | expression MINUS • expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 72
    function_call  go to state 28


State 46

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   33           | expression TIMES • expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 73
    function_call  go to state 28


State 47

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   34           | expression DIVIDED_BY • expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 74
    function_call  go to state 28


State 48

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   35           | expression EQUALS • expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 75
    function_call  go to state 28


State 49

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   36           | expression NOT_EQUALS • expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 76
    function_call  go to state 28


State 50

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   37           | expression GREATER_THAN • expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 77
    function_call  go to state 28


State 51

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   38           | expression LESS_THAN • expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 78
    function_call  go to state 28


State 52

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   39           | expression GREATER_OR_EQUAL • expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 79
    function_call  go to state 28


State 53

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   40           | expression LESS_OR_EQUAL • expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 80
    function_call  go to state 28


State 54

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   41           | expression AND • expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 81
    function_call  go to state 28


State 55

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   42           | expression OR • expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 82
    function_call  go to state 28


State 56

   28 expression_statement: expression SEMICOLON •

    $default  reduce using rule 28 (expression_statement)


State 57

   14 assignment: IDENTIFIER IS expression • SEMICOLON
   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 45
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54
    OR                shift, and go to state 55
    SEMICOLON         shift, and go to state 83


State 58

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression
   52 argument_list: expression •  [RPAREN]
   53              | expression • COMMA argument_list

    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 45
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54
    OR                shift, and go to state 55
    COMMA             shift, and go to state 84

    $default  reduce using rule 52 (argument_list)


State 59

   49 function_call: IDENTIFIER LPAREN argument_list_opt • RPAREN

    RPAREN  shift, and go to state 85


State 60

   51 argument_list_opt: argument_list •

    $default  reduce using rule 51 (argument_list_opt)


State 61

   13 variable_declaration: LET IDENTIFIER IS • expression SEMICOLON
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 86
    function_call  go to state 28


State 62

   12 variable_declaration: LET IDENTIFIER SEMICOLON •

    $default  reduce using rule 12 (variable_declaration)


State 63

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   32           | expression MINUS • expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   44           | MINUS • expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 87
    function_call  go to state 28


State 64

   23 if_statement: IF expression statements • else_clause END
   24 else_clause: • ELSE statements
   25            | ε •  [END]

    ELSE  shift, and go to state 88

    $default  reduce using rule 25 (else_clause)

    else_clause  go to state 89


State 65

   26 while_loop: WHILE expression statements • END

    END  shift, and go to state 90


State 66

   27 for_loop: FOR IDENTIFIER IN • expression statements END
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 91
    function_call  go to state 28


State 67

   15 function_declaration: FUNCTION IDENTIFIER LPAREN • parameter_list_opt RPAREN statements END
   16 parameter_list_opt: ε •  [RPAREN]
   17                   | • parameter_list
   18 parameter_list: • IDENTIFIER
   19               | • IDENTIFIER COMMA parameter_list

    IDENTIFIER  shift, and go to state 92

    $default  reduce using rule 16 (parameter_list_opt)

    parameter_list_opt  go to state 93
    parameter_list      go to state 94


State 68

   30 return_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 30 (return_statement)


State 69

   29 print_statement: PRINT expression SEMICOLON •

    $default  reduce using rule 29 (print_statement)


State 70

   45 expression: LPAREN expression RPAREN •

    $default  reduce using rule 45 (expression)


State 71

   31 expression: expression • PLUS expression
   31           | expression PLUS expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, PLUS, MINUS, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    TIMES       shift, and go to state 46
    DIVIDED_BY  shift, and go to state 47

    $default  reduce using rule 31 (expression)

    Conflict between rule 31 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 31 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 31 and token TIMES resolved as shift (PLUS < TIMES).
    Conflict between rule 31 and token DIVIDED_BY resolved as shift (PLUS < DIVIDED_BY).
    Conflict between rule 31 and token EQUALS resolved as reduce (EQUALS < PLUS).
    Conflict between rule 31 and token NOT_EQUALS resolved as reduce (NOT_EQUALS < PLUS).
    Conflict between rule 31 and token GREATER_THAN resolved as reduce (GREATER_THAN < PLUS).
    Conflict between rule 31 and token LESS_THAN resolved as reduce (LESS_THAN < PLUS).
    Conflict between rule 31 and token GREATER_OR_EQUAL resolved as reduce (GREATER_OR_EQUAL < PLUS).
    Conflict between rule 31 and token LESS_OR_EQUAL resolved as reduce (LESS_OR_EQUAL < PLUS).
    Conflict between rule 31 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 31 and token OR resolved as reduce (OR < PLUS).


State 72

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   32           | expression MINUS expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, PLUS, MINUS, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    TIMES       shift, and go to state 46
    DIVIDED_BY  shift, and go to state 47

    $default  reduce using rule 32 (expression)

    Conflict between rule 32 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 32 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 32 and token TIMES resolved as shift (MINUS < TIMES).
    Conflict between rule 32 and token DIVIDED_BY resolved as shift (MINUS < DIVIDED_BY).
    Conflict between rule 32 and token EQUALS resolved as reduce (EQUALS < MINUS).
    Conflict between rule 32 and token NOT_EQUALS resolved as reduce (NOT_EQUALS < MINUS).
    Conflict between rule 32 and token GREATER_THAN resolved as reduce (GREATER_THAN < MINUS).
    Conflict between rule 32 and token LESS_THAN resolved as reduce (LESS_THAN < MINUS).
    Conflict between rule 32 and token GREATER_OR_EQUAL resolved as reduce (GREATER_OR_EQUAL < MINUS).
    Conflict between rule 32 and token LESS_OR_EQUAL resolved as reduce (LESS_OR_EQUAL < MINUS).
    Conflict between rule 32 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 32 and token OR resolved as reduce (OR < MINUS).


State 73

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   33           | expression TIMES expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, PLUS, MINUS, TIMES, DIVIDED_BY, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    $default  reduce using rule 33 (expression)

    Conflict between rule 33 and token PLUS resolved as reduce (PLUS < TIMES).
    Conflict between rule 33 and token MINUS resolved as reduce (MINUS < TIMES).
    Conflict between rule 33 and token TIMES resolved as reduce (%left TIMES).
    Conflict between rule 33 and token DIVIDED_BY resolved as reduce (%left DIVIDED_BY).
    Conflict between rule 33 and token EQUALS resolved as reduce (EQUALS < TIMES).
    Conflict between rule 33 and token NOT_EQUALS resolved as reduce (NOT_EQUALS < TIMES).
    Conflict between rule 33 and token GREATER_THAN resolved as reduce (GREATER_THAN < TIMES).
    Conflict between rule 33 and token LESS_THAN resolved as reduce (LESS_THAN < TIMES).
    Conflict between rule 33 and token GREATER_OR_EQUAL resolved as reduce (GREATER_OR_EQUAL < TIMES).
    Conflict between rule 33 and token LESS_OR_EQUAL resolved as reduce (LESS_OR_EQUAL < TIMES).
    Conflict between rule 33 and token AND resolved as reduce (AND < TIMES).
    Conflict between rule 33 and token OR resolved as reduce (OR < TIMES).


State 74

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   34           | expression DIVIDED_BY expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, PLUS, MINUS, TIMES, DIVIDED_BY, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    $default  reduce using rule 34 (expression)

    Conflict between rule 34 and token PLUS resolved as reduce (PLUS < DIVIDED_BY).
    Conflict between rule 34 and token MINUS resolved as reduce (MINUS < DIVIDED_BY).
    Conflict between rule 34 and token TIMES resolved as reduce (%left TIMES).
    Conflict between rule 34 and token DIVIDED_BY resolved as reduce (%left DIVIDED_BY).
    Conflict between rule 34 and token EQUALS resolved as reduce (EQUALS < DIVIDED_BY).
    Conflict between rule 34 and token NOT_EQUALS resolved as reduce (NOT_EQUALS < DIVIDED_BY).
    Conflict between rule 34 and token GREATER_THAN resolved as reduce (GREATER_THAN < DIVIDED_BY).
    Conflict between rule 34 and token LESS_THAN resolved as reduce (LESS_THAN < DIVIDED_BY).
    Conflict between rule 34 and token GREATER_OR_EQUAL resolved as reduce (GREATER_OR_EQUAL < DIVIDED_BY).
    Conflict between rule 34 and token LESS_OR_EQUAL resolved as reduce (LESS_OR_EQUAL < DIVIDED_BY).
    Conflict between rule 34 and token AND resolved as reduce (AND < DIVIDED_BY).
    Conflict between rule 34 and token OR resolved as reduce (OR < DIVIDED_BY).


State 75

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   35           | expression EQUALS expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS        shift, and go to state 44
    MINUS       shift, and go to state 45
    TIMES       shift, and go to state 46
    DIVIDED_BY  shift, and go to state 47

    EQUALS            error (nonassociative)
    NOT_EQUALS        error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 35 (expression)

    Conflict between rule 35 and token PLUS resolved as shift (EQUALS < PLUS).
    Conflict between rule 35 and token MINUS resolved as shift (EQUALS < MINUS).
    Conflict between rule 35 and token TIMES resolved as shift (EQUALS < TIMES).
    Conflict between rule 35 and token DIVIDED_BY resolved as shift (EQUALS < DIVIDED_BY).
    Conflict between rule 35 and token EQUALS resolved as an error (%nonassoc EQUALS).
    Conflict between rule 35 and token NOT_EQUALS resolved as an error (%nonassoc NOT_EQUALS).
    Conflict between rule 35 and token GREATER_THAN resolved as an error (%nonassoc GREATER_THAN).
    Conflict between rule 35 and token LESS_THAN resolved as an error (%nonassoc LESS_THAN).
    Conflict between rule 35 and token GREATER_OR_EQUAL resolved as an error (%nonassoc GREATER_OR_EQUAL).
    Conflict between rule 35 and token LESS_OR_EQUAL resolved as an error (%nonassoc LESS_OR_EQUAL).
    Conflict between rule 35 and token AND resolved as reduce (AND < EQUALS).
    Conflict between rule 35 and token OR resolved as reduce (OR < EQUALS).


State 76

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   36           | expression NOT_EQUALS expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS        shift, and go to state 44
    MINUS       shift, and go to state 45
    TIMES       shift, and go to state 46
    DIVIDED_BY  shift, and go to state 47

    EQUALS            error (nonassociative)
    NOT_EQUALS        error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 36 (expression)

    Conflict between rule 36 and token PLUS resolved as shift (NOT_EQUALS < PLUS).
    Conflict between rule 36 and token MINUS resolved as shift (NOT_EQUALS < MINUS).
    Conflict between rule 36 and token TIMES resolved as shift (NOT_EQUALS < TIMES).
    Conflict between rule 36 and token DIVIDED_BY resolved as shift (NOT_EQUALS < DIVIDED_BY).
    Conflict between rule 36 and token EQUALS resolved as an error (%nonassoc EQUALS).
    Conflict between rule 36 and token NOT_EQUALS resolved as an error (%nonassoc NOT_EQUALS).
    Conflict between rule 36 and token GREATER_THAN resolved as an error (%nonassoc GREATER_THAN).
    Conflict between rule 36 and token LESS_THAN resolved as an error (%nonassoc LESS_THAN).
    Conflict between rule 36 and token GREATER_OR_EQUAL resolved as an error (%nonassoc GREATER_OR_EQUAL).
    Conflict between rule 36 and token LESS_OR_EQUAL resolved as an error (%nonassoc LESS_OR_EQUAL).
    Conflict between rule 36 and token AND resolved as reduce (AND < NOT_EQUALS).
    Conflict between rule 36 and token OR resolved as reduce (OR < NOT_EQUALS).


State 77

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   37           | expression GREATER_THAN expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS        shift, and go to state 44
    MINUS       shift, and go to state 45
    TIMES       shift, and go to state 46
    DIVIDED_BY  shift, and go to state 47

    EQUALS            error (nonassociative)
    NOT_EQUALS        error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 37 (expression)

    Conflict between rule 37 and token PLUS resolved as shift (GREATER_THAN < PLUS).
    Conflict between rule 37 and token MINUS resolved as shift (GREATER_THAN < MINUS).
    Conflict between rule 37 and token TIMES resolved as shift (GREATER_THAN < TIMES).
    Conflict between rule 37 and token DIVIDED_BY resolved as shift (GREATER_THAN < DIVIDED_BY).
    Conflict between rule 37 and token EQUALS resolved as an error (%nonassoc EQUALS).
    Conflict between rule 37 and token NOT_EQUALS resolved as an error (%nonassoc NOT_EQUALS).
    Conflict between rule 37 and token GREATER_THAN resolved as an error (%nonassoc GREATER_THAN).
    Conflict between rule 37 and token LESS_THAN resolved as an error (%nonassoc LESS_THAN).
    Conflict between rule 37 and token GREATER_OR_EQUAL resolved as an error (%nonassoc GREATER_OR_EQUAL).
    Conflict between rule 37 and token LESS_OR_EQUAL resolved as an error (%nonassoc LESS_OR_EQUAL).
    Conflict between rule 37 and token AND resolved as reduce (AND < GREATER_THAN).
    Conflict between rule 37 and token OR resolved as reduce (OR < GREATER_THAN).


State 78

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   38           | expression LESS_THAN expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS        shift, and go to state 44
    MINUS       shift, and go to state 45
    TIMES       shift, and go to state 46
    DIVIDED_BY  shift, and go to state 47

    EQUALS            error (nonassociative)
    NOT_EQUALS        error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 38 (expression)

    Conflict between rule 38 and token PLUS resolved as shift (LESS_THAN < PLUS).
    Conflict between rule 38 and token MINUS resolved as shift (LESS_THAN < MINUS).
    Conflict between rule 38 and token TIMES resolved as shift (LESS_THAN < TIMES).
    Conflict between rule 38 and token DIVIDED_BY resolved as shift (LESS_THAN < DIVIDED_BY).
    Conflict between rule 38 and token EQUALS resolved as an error (%nonassoc EQUALS).
    Conflict between rule 38 and token NOT_EQUALS resolved as an error (%nonassoc NOT_EQUALS).
    Conflict between rule 38 and token GREATER_THAN resolved as an error (%nonassoc GREATER_THAN).
    Conflict between rule 38 and token LESS_THAN resolved as an error (%nonassoc LESS_THAN).
    Conflict between rule 38 and token GREATER_OR_EQUAL resolved as an error (%nonassoc GREATER_OR_EQUAL).
    Conflict between rule 38 and token LESS_OR_EQUAL resolved as an error (%nonassoc LESS_OR_EQUAL).
    Conflict between rule 38 and token AND resolved as reduce (AND < LESS_THAN).
    Conflict between rule 38 and token OR resolved as reduce (OR < LESS_THAN).


State 79

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   39           | expression GREATER_OR_EQUAL expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS        shift, and go to state 44
    MINUS       shift, and go to state 45
    TIMES       shift, and go to state 46
    DIVIDED_BY  shift, and go to state 47

    EQUALS            error (nonassociative)
    NOT_EQUALS        error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 39 (expression)

    Conflict between rule 39 and token PLUS resolved as shift (GREATER_OR_EQUAL < PLUS).
    Conflict between rule 39 and token MINUS resolved as shift (GREATER_OR_EQUAL < MINUS).
    Conflict between rule 39 and token TIMES resolved as shift (GREATER_OR_EQUAL < TIMES).
    Conflict between rule 39 and token DIVIDED_BY resolved as shift (GREATER_OR_EQUAL < DIVIDED_BY).
    Conflict between rule 39 and token EQUALS resolved as an error (%nonassoc EQUALS).
    Conflict between rule 39 and token NOT_EQUALS resolved as an error (%nonassoc NOT_EQUALS).
    Conflict between rule 39 and token GREATER_THAN resolved as an error (%nonassoc GREATER_THAN).
    Conflict between rule 39 and token LESS_THAN resolved as an error (%nonassoc LESS_THAN).
    Conflict between rule 39 and token GREATER_OR_EQUAL resolved as an error (%nonassoc GREATER_OR_EQUAL).
    Conflict between rule 39 and token LESS_OR_EQUAL resolved as an error (%nonassoc LESS_OR_EQUAL).
    Conflict between rule 39 and token AND resolved as reduce (AND < GREATER_OR_EQUAL).
    Conflict between rule 39 and token OR resolved as reduce (OR < GREATER_OR_EQUAL).


State 80

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   40           | expression LESS_OR_EQUAL expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS        shift, and go to state 44
    MINUS       shift, and go to state 45
    TIMES       shift, and go to state 46
    DIVIDED_BY  shift, and go to state 47

    EQUALS            error (nonassociative)
    NOT_EQUALS        error (nonassociative)
    GREATER_THAN      error (nonassociative)
    LESS_THAN         error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 40 (expression)

    Conflict between rule 40 and token PLUS resolved as shift (LESS_OR_EQUAL < PLUS).
    Conflict between rule 40 and token MINUS resolved as shift (LESS_OR_EQUAL < MINUS).
    Conflict between rule 40 and token TIMES resolved as shift (LESS_OR_EQUAL < TIMES).
    Conflict between rule 40 and token DIVIDED_BY resolved as shift (LESS_OR_EQUAL < DIVIDED_BY).
    Conflict between rule 40 and token EQUALS resolved as an error (%nonassoc EQUALS).
    Conflict between rule 40 and token NOT_EQUALS resolved as an error (%nonassoc NOT_EQUALS).
    Conflict between rule 40 and token GREATER_THAN resolved as an error (%nonassoc GREATER_THAN).
    Conflict between rule 40 and token LESS_THAN resolved as an error (%nonassoc LESS_THAN).
    Conflict between rule 40 and token GREATER_OR_EQUAL resolved as an error (%nonassoc GREATER_OR_EQUAL).
    Conflict between rule 40 and token LESS_OR_EQUAL resolved as an error (%nonassoc LESS_OR_EQUAL).
    Conflict between rule 40 and token AND resolved as reduce (AND < LESS_OR_EQUAL).
    Conflict between rule 40 and token OR resolved as reduce (OR < LESS_OR_EQUAL).


State 81

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   41           | expression AND expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, AND, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]
   42           | expression • OR expression

    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 45
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53

    $default  reduce using rule 41 (expression)

    Conflict between rule 41 and token PLUS resolved as shift (AND < PLUS).
    Conflict between rule 41 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 41 and token TIMES resolved as shift (AND < TIMES).
    Conflict between rule 41 and token DIVIDED_BY resolved as shift (AND < DIVIDED_BY).
    Conflict between rule 41 and token EQUALS resolved as shift (AND < EQUALS).
    Conflict between rule 41 and token NOT_EQUALS resolved as shift (AND < NOT_EQUALS).
    Conflict between rule 41 and token GREATER_THAN resolved as shift (AND < GREATER_THAN).
    Conflict between rule 41 and token LESS_THAN resolved as shift (AND < LESS_THAN).
    Conflict between rule 41 and token GREATER_OR_EQUAL resolved as shift (AND < GREATER_OR_EQUAL).
    Conflict between rule 41 and token LESS_OR_EQUAL resolved as shift (AND < LESS_OR_EQUAL).
    Conflict between rule 41 and token AND resolved as reduce (%left AND).
    Conflict between rule 41 and token OR resolved as reduce (OR < AND).


State 82

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression
   42           | expression OR expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, OR, NOT, SEMICOLON, COMMA, LPAREN, RPAREN]

    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 45
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54

    $default  reduce using rule 42 (expression)

    Conflict between rule 42 and token PLUS resolved as shift (OR < PLUS).
    Conflict between rule 42 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 42 and token TIMES resolved as shift (OR < TIMES).
    Conflict between rule 42 and token DIVIDED_BY resolved as shift (OR < DIVIDED_BY).
    Conflict between rule 42 and token EQUALS resolved as shift (OR < EQUALS).
    Conflict between rule 42 and token NOT_EQUALS resolved as shift (OR < NOT_EQUALS).
    Conflict between rule 42 and token GREATER_THAN resolved as shift (OR < GREATER_THAN).
    Conflict between rule 42 and token LESS_THAN resolved as shift (OR < LESS_THAN).
    Conflict between rule 42 and token GREATER_OR_EQUAL resolved as shift (OR < GREATER_OR_EQUAL).
    Conflict between rule 42 and token LESS_OR_EQUAL resolved as shift (OR < LESS_OR_EQUAL).
    Conflict between rule 42 and token AND resolved as shift (OR < AND).
    Conflict between rule 42 and token OR resolved as reduce (%left OR).


State 83

   14 assignment: IDENTIFIER IS expression SEMICOLON •

    $default  reduce using rule 14 (assignment)


State 84

   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN
   52 argument_list: • expression
   53              | • expression COMMA argument_list
   53              | expression COMMA • argument_list

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 32
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression     go to state 58
    function_call  go to state 28
    argument_list  go to state 95


State 85

   49 function_call: IDENTIFIER LPAREN argument_list_opt RPAREN •

    $default  reduce using rule 49 (function_call)


State 86

   13 variable_declaration: LET IDENTIFIER IS expression • SEMICOLON
   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression

    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 45
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54
    OR                shift, and go to state 55
    SEMICOLON         shift, and go to state 96


State 87

   31 expression: expression • PLUS expression
   32           | expression • MINUS expression
   32           | expression MINUS expression •  [NUMBER, IDENTIFIER, LET, IF, ELSE, WHILE, FOR, FUNCTION, END, RETURN, PRINT, PLUS, MINUS, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, NOT, SEMICOLON, LPAREN]
   33           | expression • TIMES expression
   34           | expression • DIVIDED_BY expression
   35           | expression • EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | expression • GREATER_THAN expression
   38           | expression • LESS_THAN expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | expression • AND expression
   42           | expression • OR expression
   44           | MINUS expression •  [PLUS, MINUS, TIMES, DIVIDED_BY, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, SEMICOLON]

    PLUS              reduce using rule 32 (expression)
    PLUS              [reduce using rule 44 (expression)]
    MINUS             reduce using rule 32 (expression)
    MINUS             [reduce using rule 44 (expression)]
    TIMES             reduce using rule 44 (expression)
    DIVIDED_BY        reduce using rule 44 (expression)
    EQUALS            reduce using rule 32 (expression)
    EQUALS            [reduce using rule 44 (expression)]
    NOT_EQUALS        reduce using rule 32 (expression)
    NOT_EQUALS        [reduce using rule 44 (expression)]
    GREATER_THAN      reduce using rule 32 (expression)
    GREATER_THAN      [reduce using rule 44 (expression)]
    LESS_THAN         reduce using rule 32 (expression)
    LESS_THAN         [reduce using rule 44 (expression)]
    GREATER_OR_EQUAL  reduce using rule 32 (expression)
    GREATER_OR_EQUAL  [reduce using rule 44 (expression)]
    LESS_OR_EQUAL     reduce using rule 32 (expression)
    LESS_OR_EQUAL     [reduce using rule 44 (expression)]
    AND               reduce using rule 32 (expression)
    AND               [reduce using rule 44 (expression)]
    OR                reduce using rule 32 (expression)
    OR                [reduce using rule 44 (expression)]
    SEMICOLON         reduce using rule 32 (expression)
    SEMICOLON         [reduce using rule 44 (expression)]
    $default          reduce using rule 32 (expression)

    Conflict between rule 32 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 32 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 32 and token TIMES resolved as shift (MINUS < TIMES).
    Conflict between rule 32 and token DIVIDED_BY resolved as shift (MINUS < DIVIDED_BY).
    Conflict between rule 32 and token EQUALS resolved as reduce (EQUALS < MINUS).
    Conflict between rule 32 and token NOT_EQUALS resolved as reduce (NOT_EQUALS < MINUS).
    Conflict between rule 32 and token GREATER_THAN resolved as reduce (GREATER_THAN < MINUS).
    Conflict between rule 32 and token LESS_THAN resolved as reduce (LESS_THAN < MINUS).
    Conflict between rule 32 and token GREATER_OR_EQUAL resolved as reduce (GREATER_OR_EQUAL < MINUS).
    Conflict between rule 32 and token LESS_OR_EQUAL resolved as reduce (LESS_OR_EQUAL < MINUS).
    Conflict between rule 32 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 32 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 44 and token TIMES resolved as reduce (TIMES < UMINUS).
    Conflict between rule 44 and token DIVIDED_BY resolved as reduce (DIVIDED_BY < UMINUS).

    reduce/reduce conflict on tokens PLUS, MINUS, EQUALS, NOT_EQUALS, GREATER_THAN, LESS_THAN, GREATER_OR_EQUAL, LESS_OR_EQUAL, AND, OR, SEMICOLON:
       32 expression: expression MINUS expression •
       44 expression: MINUS expression •
      First example: expression MINUS expression • statements else_clause END
      First reduce derivation
        if_statement
        ↳ 23: expression                          statements else_clause END
              ↳ 32: expression MINUS expression •
      Second example: expression MINUS expression • else_clause END
      Second reduce derivation
        if_statement
        ↳ 23: expression expression               else_clause END
                         ↳ 44: MINUS expression •



State 88

    2 statements: ε •  [END]
    3           | • statement statements
    4 statement: • variable_declaration
    5          | • assignment
    6          | • function_declaration
    7          | • control_structure
    8          | • expression_statement
    9          | • print_statement
   10          | • return_statement
   11          | • SEMICOLON
   12 variable_declaration: • LET IDENTIFIER SEMICOLON
   13                     | • LET IDENTIFIER IS expression SEMICOLON
   14 assignment: • IDENTIFIER IS expression SEMICOLON
   15 function_declaration: • FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END
   20 control_structure: • if_statement
   21                  | • while_loop
   22                  | • for_loop
   23 if_statement: • IF expression statements else_clause END
   24 else_clause: ELSE • statements
   26 while_loop: • WHILE expression statements END
   27 for_loop: • FOR IDENTIFIER IN expression statements END
   28 expression_statement: • expression SEMICOLON
   29 print_statement: • PRINT expression SEMICOLON
   30 return_statement: • RETURN expression SEMICOLON
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 2 (statements)

    statements            go to state 97
    statement             go to state 16
    variable_declaration  go to state 17
    assignment            go to state 18
    function_declaration  go to state 19
    control_structure     go to state 20
    if_statement          go to state 21
    while_loop            go to state 22
    for_loop              go to state 23
    expression_statement  go to state 24
    print_statement       go to state 25
    return_statement      go to state 26
    expression            go to state 27
    function_call         go to state 28


State 89

   23 if_statement: IF expression statements else_clause • END

    END  shift, and go to state 98


State 90

   26 while_loop: WHILE expression statements END •

    $default  reduce using rule 26 (while_loop)


State 91

    2 statements: ε •  [END]
    3           | • statement statements
    4 statement: • variable_declaration
    5          | • assignment
    6          | • function_declaration
    7          | • control_structure
    8          | • expression_statement
    9          | • print_statement
   10          | • return_statement
   11          | • SEMICOLON
   12 variable_declaration: • LET IDENTIFIER SEMICOLON
   13                     | • LET IDENTIFIER IS expression SEMICOLON
   14 assignment: • IDENTIFIER IS expression SEMICOLON
   15 function_declaration: • FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END
   20 control_structure: • if_statement
   21                  | • while_loop
   22                  | • for_loop
   23 if_statement: • IF expression statements else_clause END
   26 while_loop: • WHILE expression statements END
   27 for_loop: • FOR IDENTIFIER IN expression statements END
   27         | FOR IDENTIFIER IN expression • statements END
   28 expression_statement: • expression SEMICOLON
   29 print_statement: • PRINT expression SEMICOLON
   30 return_statement: • RETURN expression SEMICOLON
   31 expression: • expression PLUS expression
   31           | expression • PLUS expression
   32           | • expression MINUS expression
   32           | expression • MINUS expression
   33           | • expression TIMES expression
   33           | expression • TIMES expression
   34           | • expression DIVIDED_BY expression
   34           | expression • DIVIDED_BY expression
   35           | • expression EQUALS expression
   35           | expression • EQUALS expression
   36           | • expression NOT_EQUALS expression
   36           | expression • NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   37           | expression • GREATER_THAN expression
   38           | • expression LESS_THAN expression
   38           | expression • LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   39           | expression • GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   40           | expression • LESS_OR_EQUAL expression
   41           | • expression AND expression
   41           | expression • AND expression
   42           | • expression OR expression
   42           | expression • OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER            shift, and go to state 1
    IDENTIFIER        shift, and go to state 2
    LET               shift, and go to state 3
    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    PRINT             shift, and go to state 9
    PLUS              shift, and go to state 44
    MINUS             shift, and go to state 63
    TIMES             shift, and go to state 46
    DIVIDED_BY        shift, and go to state 47
    EQUALS            shift, and go to state 48
    NOT_EQUALS        shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_THAN         shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    LESS_OR_EQUAL     shift, and go to state 53
    AND               shift, and go to state 54
    OR                shift, and go to state 55
    NOT               shift, and go to state 11
    SEMICOLON         shift, and go to state 12
    LPAREN            shift, and go to state 13

    $default  reduce using rule 2 (statements)

    statements            go to state 99
    statement             go to state 16
    variable_declaration  go to state 17
    assignment            go to state 18
    function_declaration  go to state 19
    control_structure     go to state 20
    if_statement          go to state 21
    while_loop            go to state 22
    for_loop              go to state 23
    expression_statement  go to state 24
    print_statement       go to state 25
    return_statement      go to state 26
    expression            go to state 27
    function_call         go to state 28


State 92

   18 parameter_list: IDENTIFIER •  [RPAREN]
   19               | IDENTIFIER • COMMA parameter_list

    COMMA  shift, and go to state 100

    $default  reduce using rule 18 (parameter_list)


State 93

   15 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list_opt • RPAREN statements END

    RPAREN  shift, and go to state 101


State 94

   17 parameter_list_opt: parameter_list •

    $default  reduce using rule 17 (parameter_list_opt)


State 95

   53 argument_list: expression COMMA argument_list •

    $default  reduce using rule 53 (argument_list)


State 96

   13 variable_declaration: LET IDENTIFIER IS expression SEMICOLON •

    $default  reduce using rule 13 (variable_declaration)


State 97

   24 else_clause: ELSE statements •

    $default  reduce using rule 24 (else_clause)


State 98

   23 if_statement: IF expression statements else_clause END •

    $default  reduce using rule 23 (if_statement)


State 99

   27 for_loop: FOR IDENTIFIER IN expression statements • END

    END  shift, and go to state 102


State 100

   18 parameter_list: • IDENTIFIER
   19               | • IDENTIFIER COMMA parameter_list
   19               | IDENTIFIER COMMA • parameter_list

    IDENTIFIER  shift, and go to state 92

    parameter_list  go to state 103


State 101

    2 statements: ε •  [END]
    3           | • statement statements
    4 statement: • variable_declaration
    5          | • assignment
    6          | • function_declaration
    7          | • control_structure
    8          | • expression_statement
    9          | • print_statement
   10          | • return_statement
   11          | • SEMICOLON
   12 variable_declaration: • LET IDENTIFIER SEMICOLON
   13                     | • LET IDENTIFIER IS expression SEMICOLON
   14 assignment: • IDENTIFIER IS expression SEMICOLON
   15 function_declaration: • FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END
   15                     | FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN • statements END
   20 control_structure: • if_statement
   21                  | • while_loop
   22                  | • for_loop
   23 if_statement: • IF expression statements else_clause END
   26 while_loop: • WHILE expression statements END
   27 for_loop: • FOR IDENTIFIER IN expression statements END
   28 expression_statement: • expression SEMICOLON
   29 print_statement: • PRINT expression SEMICOLON
   30 return_statement: • RETURN expression SEMICOLON
   31 expression: • expression PLUS expression
   32           | • expression MINUS expression
   33           | • expression TIMES expression
   34           | • expression DIVIDED_BY expression
   35           | • expression EQUALS expression
   36           | • expression NOT_EQUALS expression
   37           | • expression GREATER_THAN expression
   38           | • expression LESS_THAN expression
   39           | • expression GREATER_OR_EQUAL expression
   40           | • expression LESS_OR_EQUAL expression
   41           | • expression AND expression
   42           | • expression OR expression
   43           | • NOT expression
   44           | • MINUS expression
   45           | • LPAREN expression RPAREN
   46           | • NUMBER
   47           | • IDENTIFIER
   48           | • function_call
   49 function_call: • IDENTIFIER LPAREN argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 2 (statements)

    statements            go to state 104
    statement             go to state 16
    variable_declaration  go to state 17
    assignment            go to state 18
    function_declaration  go to state 19
    control_structure     go to state 20
    if_statement          go to state 21
    while_loop            go to state 22
    for_loop              go to state 23
    expression_statement  go to state 24
    print_statement       go to state 25
    return_statement      go to state 26
    expression            go to state 27
    function_call         go to state 28


State 102

   27 for_loop: FOR IDENTIFIER IN expression statements END •

    $default  reduce using rule 27 (for_loop)


State 103

   19 parameter_list: IDENTIFIER COMMA parameter_list •

    $default  reduce using rule 19 (parameter_list)


State 104

   15 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements • END

    END  shift, and go to state 105


State 105

   15 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END •

    $default  reduce using rule 15 (function_declaration)
