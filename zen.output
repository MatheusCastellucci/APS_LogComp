Terminals unused in grammar

    STRING
    INPUT


State 40 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: non_empty_statements
    3           | ε

    4 non_empty_statements: statement
    5                     | statement non_empty_statements

    6 statement: variable_declaration
    7          | assignment
    8          | function_declaration
    9          | control_structure
   10          | expression_statement
   11          | print_statement
   12          | return_statement
   13          | SEMICOLON

   14 variable_declaration: LET IDENTIFIER SEMICOLON
   15                     | LET IDENTIFIER IS expression SEMICOLON

   16 assignment: IDENTIFIER IS expression SEMICOLON

   17 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END

   18 parameter_list_opt: ε
   19                   | parameter_list

   20 parameter_list: IDENTIFIER
   21               | IDENTIFIER COMMA parameter_list

   22 control_structure: if_statement
   23                  | while_loop
   24                  | for_loop

   25 if_statement: IF expression statements END
   26             | IF expression statements ELSE statements END

   27 while_loop: WHILE expression statements END

   28 for_loop: FOR IDENTIFIER IN expression statements END

   29 expression_statement: expression SEMICOLON

   30 print_statement: PRINT expression SEMICOLON

   31 return_statement: RETURN expression SEMICOLON

   32 expression: logical_or_expression

   33 logical_or_expression: logical_or_expression OR logical_and_expression
   34                      | logical_and_expression

   35 logical_and_expression: logical_and_expression AND equality_expression
   36                       | equality_expression

   37 equality_expression: equality_expression EQUALS relational_expression
   38                    | equality_expression NOT_EQUALS relational_expression
   39                    | relational_expression

   40 relational_expression: relational_expression GREATER_THAN additive_expression
   41                      | relational_expression LESS_THAN additive_expression
   42                      | relational_expression GREATER_OR_EQUAL additive_expression
   43                      | relational_expression LESS_OR_EQUAL additive_expression
   44                      | additive_expression

   45 additive_expression: additive_expression PLUS multiplicative_expression
   46                    | additive_expression MINUS multiplicative_expression
   47                    | multiplicative_expression

   48 multiplicative_expression: multiplicative_expression TIMES unary_expression
   49                          | multiplicative_expression DIVIDED_BY unary_expression
   50                          | unary_expression

   51 unary_expression: MINUS unary_expression
   52                 | NOT unary_expression
   53                 | primary_expression

   54 primary_expression: IDENTIFIER LPAREN argument_list_opt RPAREN
   55                   | IDENTIFIER
   56                   | NUMBER
   57                   | LPAREN expression RPAREN

   58 argument_list_opt: ε
   59                  | argument_list

   60 argument_list: expression
   61              | expression COMMA argument_list


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUMBER <intVal> (258) 56
    STRING <strVal> (259)
    IDENTIFIER <strVal> (260) 14 15 16 17 20 21 28 54 55
    LET (261) 14 15
    IS (262) 15 16
    IF (263) 25 26
    ELSE (264) 26
    WHILE (265) 27
    FOR (266) 28
    IN (267) 28
    FUNCTION (268) 17
    END (269) 17 25 26 27 28
    RETURN (270) 31
    PRINT (271) 30
    INPUT (272)
    PLUS (273) 45
    MINUS (274) 46 51
    TIMES (275) 48
    DIVIDED_BY (276) 49
    EQUALS (277) 37
    NOT_EQUALS (278) 38
    GREATER_THAN (279) 40
    LESS_THAN (280) 41
    GREATER_OR_EQUAL (281) 42
    LESS_OR_EQUAL (282) 43
    AND (283) 35
    OR (284) 33
    NOT (285) 52
    SEMICOLON (286) 13 14 15 16 29 30 31
    COMMA (287) 21 61
    LPAREN (288) 17 54 57
    RPAREN (289) 17 54 57
    UMINUS (290)
    LOWEST (291)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program <statements> (38)
        on left: 1
        on right: 0
    statements <statements> (39)
        on left: 2 3
        on right: 1 17 25 26 27 28
    non_empty_statements <statements> (40)
        on left: 4 5
        on right: 2 5
    statement <statement> (41)
        on left: 6 7 8 9 10 11 12 13
        on right: 4 5
    variable_declaration <statement> (42)
        on left: 14 15
        on right: 6
    assignment <statement> (43)
        on left: 16
        on right: 7
    function_declaration <statement> (44)
        on left: 17
        on right: 8
    parameter_list_opt <paramList> (45)
        on left: 18 19
        on right: 17
    parameter_list <paramList> (46)
        on left: 20 21
        on right: 19 21
    control_structure <statement> (47)
        on left: 22 23 24
        on right: 9
    if_statement <statement> (48)
        on left: 25 26
        on right: 22
    while_loop <statement> (49)
        on left: 27
        on right: 23
    for_loop <statement> (50)
        on left: 28
        on right: 24
    expression_statement <statement> (51)
        on left: 29
        on right: 10
    print_statement <statement> (52)
        on left: 30
        on right: 11
    return_statement <statement> (53)
        on left: 31
        on right: 12
    expression <value> (54)
        on left: 32
        on right: 15 16 25 26 27 28 29 30 31 57 60 61
    logical_or_expression <value> (55)
        on left: 33 34
        on right: 32 33
    logical_and_expression <value> (56)
        on left: 35 36
        on right: 33 34 35
    equality_expression <value> (57)
        on left: 37 38 39
        on right: 35 36 37 38
    relational_expression <value> (58)
        on left: 40 41 42 43 44
        on right: 37 38 39 40 41 42 43
    additive_expression <value> (59)
        on left: 45 46 47
        on right: 40 41 42 43 44 45 46
    multiplicative_expression <value> (60)
        on left: 48 49 50
        on right: 45 46 47 48 49
    unary_expression <value> (61)
        on left: 51 52 53
        on right: 48 49 50 51 52
    primary_expression <value> (62)
        on left: 54 55 56 57
        on right: 53
    argument_list_opt <argList> (63)
        on left: 58 59
        on right: 54
    argument_list <argList> (64)
        on left: 60 61
        on right: 59 61


State 0

    0 $accept: • program $end

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 3 (statements)

    program                    go to state 14
    statements                 go to state 15
    non_empty_statements       go to state 16
    statement                  go to state 17
    variable_declaration       go to state 18
    assignment                 go to state 19
    function_declaration       go to state 20
    control_structure          go to state 21
    if_statement               go to state 22
    while_loop                 go to state 23
    for_loop                   go to state 24
    expression_statement       go to state 25
    print_statement            go to state 26
    return_statement           go to state 27
    expression                 go to state 28
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 1

   56 primary_expression: NUMBER •

    $default  reduce using rule 56 (primary_expression)


State 2

   16 assignment: IDENTIFIER • IS expression SEMICOLON
   54 primary_expression: IDENTIFIER • LPAREN argument_list_opt RPAREN
   55                   | IDENTIFIER •

    IS      shift, and go to state 37
    LPAREN  shift, and go to state 38

    $default  reduce using rule 55 (primary_expression)


State 3

   14 variable_declaration: LET • IDENTIFIER SEMICOLON
   15                     | LET • IDENTIFIER IS expression SEMICOLON

    IDENTIFIER  shift, and go to state 39


State 4

   25 if_statement: IF • expression statements END
   26             | IF • expression statements ELSE statements END

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression                 go to state 41
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 5

   27 while_loop: WHILE • expression statements END

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression                 go to state 42
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 6

   28 for_loop: FOR • IDENTIFIER IN expression statements END

    IDENTIFIER  shift, and go to state 43


State 7

   17 function_declaration: FUNCTION • IDENTIFIER LPAREN parameter_list_opt RPAREN statements END

    IDENTIFIER  shift, and go to state 44


State 8

   31 return_statement: RETURN • expression SEMICOLON

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression                 go to state 45
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 9

   30 print_statement: PRINT • expression SEMICOLON

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression                 go to state 46
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 10

   51 unary_expression: MINUS • unary_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    unary_expression    go to state 47
    primary_expression  go to state 36


State 11

   52 unary_expression: NOT • unary_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    unary_expression    go to state 48
    primary_expression  go to state 36


State 12

   13 statement: SEMICOLON •

    $default  reduce using rule 13 (statement)


State 13

   57 primary_expression: LPAREN • expression RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression                 go to state 49
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 14

    0 $accept: program • $end

    $end  shift, and go to state 50


State 15

    1 program: statements •

    $default  reduce using rule 1 (program)


State 16

    2 statements: non_empty_statements •

    $default  reduce using rule 2 (statements)


State 17

    4 non_empty_statements: statement •
    5                     | statement • non_empty_statements

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 4 (non_empty_statements)

    non_empty_statements       go to state 51
    statement                  go to state 17
    variable_declaration       go to state 18
    assignment                 go to state 19
    function_declaration       go to state 20
    control_structure          go to state 21
    if_statement               go to state 22
    while_loop                 go to state 23
    for_loop                   go to state 24
    expression_statement       go to state 25
    print_statement            go to state 26
    return_statement           go to state 27
    expression                 go to state 28
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 18

    6 statement: variable_declaration •

    $default  reduce using rule 6 (statement)


State 19

    7 statement: assignment •

    $default  reduce using rule 7 (statement)


State 20

    8 statement: function_declaration •

    $default  reduce using rule 8 (statement)


State 21

    9 statement: control_structure •

    $default  reduce using rule 9 (statement)


State 22

   22 control_structure: if_statement •

    $default  reduce using rule 22 (control_structure)


State 23

   23 control_structure: while_loop •

    $default  reduce using rule 23 (control_structure)


State 24

   24 control_structure: for_loop •

    $default  reduce using rule 24 (control_structure)


State 25

   10 statement: expression_statement •

    $default  reduce using rule 10 (statement)


State 26

   11 statement: print_statement •

    $default  reduce using rule 11 (statement)


State 27

   12 statement: return_statement •

    $default  reduce using rule 12 (statement)


State 28

   29 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 29

   32 expression: logical_or_expression •
   33 logical_or_expression: logical_or_expression • OR logical_and_expression

    OR  shift, and go to state 53

    $default  reduce using rule 32 (expression)


State 30

   34 logical_or_expression: logical_and_expression •
   35 logical_and_expression: logical_and_expression • AND equality_expression

    AND  shift, and go to state 54

    $default  reduce using rule 34 (logical_or_expression)


State 31

   36 logical_and_expression: equality_expression •
   37 equality_expression: equality_expression • EQUALS relational_expression
   38                    | equality_expression • NOT_EQUALS relational_expression

    EQUALS      shift, and go to state 55
    NOT_EQUALS  shift, and go to state 56

    $default  reduce using rule 36 (logical_and_expression)


State 32

   39 equality_expression: relational_expression •
   40 relational_expression: relational_expression • GREATER_THAN additive_expression
   41                      | relational_expression • LESS_THAN additive_expression
   42                      | relational_expression • GREATER_OR_EQUAL additive_expression
   43                      | relational_expression • LESS_OR_EQUAL additive_expression

    GREATER_THAN      shift, and go to state 57
    LESS_THAN         shift, and go to state 58
    GREATER_OR_EQUAL  shift, and go to state 59
    LESS_OR_EQUAL     shift, and go to state 60

    $default  reduce using rule 39 (equality_expression)


State 33

   44 relational_expression: additive_expression •
   45 additive_expression: additive_expression • PLUS multiplicative_expression
   46                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 44 (relational_expression)


State 34

   47 additive_expression: multiplicative_expression •
   48 multiplicative_expression: multiplicative_expression • TIMES unary_expression
   49                          | multiplicative_expression • DIVIDED_BY unary_expression

    TIMES       shift, and go to state 63
    DIVIDED_BY  shift, and go to state 64

    $default  reduce using rule 47 (additive_expression)


State 35

   50 multiplicative_expression: unary_expression •

    $default  reduce using rule 50 (multiplicative_expression)


State 36

   53 unary_expression: primary_expression •

    $default  reduce using rule 53 (unary_expression)


State 37

   16 assignment: IDENTIFIER IS • expression SEMICOLON

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression                 go to state 65
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 38

   54 primary_expression: IDENTIFIER LPAREN • argument_list_opt RPAREN

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    $default  reduce using rule 58 (argument_list_opt)

    expression                 go to state 66
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36
    argument_list_opt          go to state 67
    argument_list              go to state 68


State 39

   14 variable_declaration: LET IDENTIFIER • SEMICOLON
   15                     | LET IDENTIFIER • IS expression SEMICOLON

    IS         shift, and go to state 69
    SEMICOLON  shift, and go to state 70


State 40

   54 primary_expression: IDENTIFIER • LPAREN argument_list_opt RPAREN
   55                   | IDENTIFIER •

    LPAREN  shift, and go to state 38

    LPAREN    [reduce using rule 55 (primary_expression)]
    $default  reduce using rule 55 (primary_expression)


State 41

   25 if_statement: IF expression • statements END
   26             | IF expression • statements ELSE statements END

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 3 (statements)

    statements                 go to state 71
    non_empty_statements       go to state 16
    statement                  go to state 17
    variable_declaration       go to state 18
    assignment                 go to state 19
    function_declaration       go to state 20
    control_structure          go to state 21
    if_statement               go to state 22
    while_loop                 go to state 23
    for_loop                   go to state 24
    expression_statement       go to state 25
    print_statement            go to state 26
    return_statement           go to state 27
    expression                 go to state 28
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 42

   27 while_loop: WHILE expression • statements END

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 3 (statements)

    statements                 go to state 72
    non_empty_statements       go to state 16
    statement                  go to state 17
    variable_declaration       go to state 18
    assignment                 go to state 19
    function_declaration       go to state 20
    control_structure          go to state 21
    if_statement               go to state 22
    while_loop                 go to state 23
    for_loop                   go to state 24
    expression_statement       go to state 25
    print_statement            go to state 26
    return_statement           go to state 27
    expression                 go to state 28
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 43

   28 for_loop: FOR IDENTIFIER • IN expression statements END

    IN  shift, and go to state 73


State 44

   17 function_declaration: FUNCTION IDENTIFIER • LPAREN parameter_list_opt RPAREN statements END

    LPAREN  shift, and go to state 74


State 45

   31 return_statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 75


State 46

   30 print_statement: PRINT expression • SEMICOLON

    SEMICOLON  shift, and go to state 76


State 47

   51 unary_expression: MINUS unary_expression •

    $default  reduce using rule 51 (unary_expression)


State 48

   52 unary_expression: NOT unary_expression •

    $default  reduce using rule 52 (unary_expression)


State 49

   57 primary_expression: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 77


State 50

    0 $accept: program $end •

    $default  accept


State 51

    5 non_empty_statements: statement non_empty_statements •

    $default  reduce using rule 5 (non_empty_statements)


State 52

   29 expression_statement: expression SEMICOLON •

    $default  reduce using rule 29 (expression_statement)


State 53

   33 logical_or_expression: logical_or_expression OR • logical_and_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    logical_and_expression     go to state 78
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 54

   35 logical_and_expression: logical_and_expression AND • equality_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    equality_expression        go to state 79
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 55

   37 equality_expression: equality_expression EQUALS • relational_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    relational_expression      go to state 80
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 56

   38 equality_expression: equality_expression NOT_EQUALS • relational_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    relational_expression      go to state 81
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 57

   40 relational_expression: relational_expression GREATER_THAN • additive_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    additive_expression        go to state 82
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 58

   41 relational_expression: relational_expression LESS_THAN • additive_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    additive_expression        go to state 83
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 59

   42 relational_expression: relational_expression GREATER_OR_EQUAL • additive_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    additive_expression        go to state 84
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 60

   43 relational_expression: relational_expression LESS_OR_EQUAL • additive_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    additive_expression        go to state 85
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 61

   45 additive_expression: additive_expression PLUS • multiplicative_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    multiplicative_expression  go to state 86
    unary_expression           go to state 35
    primary_expression         go to state 36


State 62

   46 additive_expression: additive_expression MINUS • multiplicative_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    multiplicative_expression  go to state 87
    unary_expression           go to state 35
    primary_expression         go to state 36


State 63

   48 multiplicative_expression: multiplicative_expression TIMES • unary_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    unary_expression    go to state 88
    primary_expression  go to state 36


State 64

   49 multiplicative_expression: multiplicative_expression DIVIDED_BY • unary_expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    unary_expression    go to state 89
    primary_expression  go to state 36


State 65

   16 assignment: IDENTIFIER IS expression • SEMICOLON

    SEMICOLON  shift, and go to state 90


State 66

   60 argument_list: expression •
   61              | expression • COMMA argument_list

    COMMA  shift, and go to state 91

    $default  reduce using rule 60 (argument_list)


State 67

   54 primary_expression: IDENTIFIER LPAREN argument_list_opt • RPAREN

    RPAREN  shift, and go to state 92


State 68

   59 argument_list_opt: argument_list •

    $default  reduce using rule 59 (argument_list_opt)


State 69

   15 variable_declaration: LET IDENTIFIER IS • expression SEMICOLON

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression                 go to state 93
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 70

   14 variable_declaration: LET IDENTIFIER SEMICOLON •

    $default  reduce using rule 14 (variable_declaration)


State 71

   25 if_statement: IF expression statements • END
   26             | IF expression statements • ELSE statements END

    ELSE  shift, and go to state 94
    END   shift, and go to state 95


State 72

   27 while_loop: WHILE expression statements • END

    END  shift, and go to state 96


State 73

   28 for_loop: FOR IDENTIFIER IN • expression statements END

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression                 go to state 97
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 74

   17 function_declaration: FUNCTION IDENTIFIER LPAREN • parameter_list_opt RPAREN statements END

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 18 (parameter_list_opt)

    parameter_list_opt  go to state 99
    parameter_list      go to state 100


State 75

   31 return_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 31 (return_statement)


State 76

   30 print_statement: PRINT expression SEMICOLON •

    $default  reduce using rule 30 (print_statement)


State 77

   57 primary_expression: LPAREN expression RPAREN •

    $default  reduce using rule 57 (primary_expression)


State 78

   33 logical_or_expression: logical_or_expression OR logical_and_expression •
   35 logical_and_expression: logical_and_expression • AND equality_expression

    AND  shift, and go to state 54

    $default  reduce using rule 33 (logical_or_expression)


State 79

   35 logical_and_expression: logical_and_expression AND equality_expression •
   37 equality_expression: equality_expression • EQUALS relational_expression
   38                    | equality_expression • NOT_EQUALS relational_expression

    EQUALS      shift, and go to state 55
    NOT_EQUALS  shift, and go to state 56

    $default  reduce using rule 35 (logical_and_expression)


State 80

   37 equality_expression: equality_expression EQUALS relational_expression •
   40 relational_expression: relational_expression • GREATER_THAN additive_expression
   41                      | relational_expression • LESS_THAN additive_expression
   42                      | relational_expression • GREATER_OR_EQUAL additive_expression
   43                      | relational_expression • LESS_OR_EQUAL additive_expression

    GREATER_THAN      shift, and go to state 57
    LESS_THAN         shift, and go to state 58
    GREATER_OR_EQUAL  shift, and go to state 59
    LESS_OR_EQUAL     shift, and go to state 60

    $default  reduce using rule 37 (equality_expression)


State 81

   38 equality_expression: equality_expression NOT_EQUALS relational_expression •
   40 relational_expression: relational_expression • GREATER_THAN additive_expression
   41                      | relational_expression • LESS_THAN additive_expression
   42                      | relational_expression • GREATER_OR_EQUAL additive_expression
   43                      | relational_expression • LESS_OR_EQUAL additive_expression

    GREATER_THAN      shift, and go to state 57
    LESS_THAN         shift, and go to state 58
    GREATER_OR_EQUAL  shift, and go to state 59
    LESS_OR_EQUAL     shift, and go to state 60

    $default  reduce using rule 38 (equality_expression)


State 82

   40 relational_expression: relational_expression GREATER_THAN additive_expression •
   45 additive_expression: additive_expression • PLUS multiplicative_expression
   46                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 40 (relational_expression)


State 83

   41 relational_expression: relational_expression LESS_THAN additive_expression •
   45 additive_expression: additive_expression • PLUS multiplicative_expression
   46                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 41 (relational_expression)


State 84

   42 relational_expression: relational_expression GREATER_OR_EQUAL additive_expression •
   45 additive_expression: additive_expression • PLUS multiplicative_expression
   46                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 42 (relational_expression)


State 85

   43 relational_expression: relational_expression LESS_OR_EQUAL additive_expression •
   45 additive_expression: additive_expression • PLUS multiplicative_expression
   46                    | additive_expression • MINUS multiplicative_expression

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 43 (relational_expression)


State 86

   45 additive_expression: additive_expression PLUS multiplicative_expression •
   48 multiplicative_expression: multiplicative_expression • TIMES unary_expression
   49                          | multiplicative_expression • DIVIDED_BY unary_expression

    TIMES       shift, and go to state 63
    DIVIDED_BY  shift, and go to state 64

    $default  reduce using rule 45 (additive_expression)


State 87

   46 additive_expression: additive_expression MINUS multiplicative_expression •
   48 multiplicative_expression: multiplicative_expression • TIMES unary_expression
   49                          | multiplicative_expression • DIVIDED_BY unary_expression

    TIMES       shift, and go to state 63
    DIVIDED_BY  shift, and go to state 64

    $default  reduce using rule 46 (additive_expression)


State 88

   48 multiplicative_expression: multiplicative_expression TIMES unary_expression •

    $default  reduce using rule 48 (multiplicative_expression)


State 89

   49 multiplicative_expression: multiplicative_expression DIVIDED_BY unary_expression •

    $default  reduce using rule 49 (multiplicative_expression)


State 90

   16 assignment: IDENTIFIER IS expression SEMICOLON •

    $default  reduce using rule 16 (assignment)


State 91

   61 argument_list: expression COMMA • argument_list

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 40
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    LPAREN      shift, and go to state 13

    expression                 go to state 66
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36
    argument_list              go to state 101


State 92

   54 primary_expression: IDENTIFIER LPAREN argument_list_opt RPAREN •

    $default  reduce using rule 54 (primary_expression)


State 93

   15 variable_declaration: LET IDENTIFIER IS expression • SEMICOLON

    SEMICOLON  shift, and go to state 102


State 94

   26 if_statement: IF expression statements ELSE • statements END

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 3 (statements)

    statements                 go to state 103
    non_empty_statements       go to state 16
    statement                  go to state 17
    variable_declaration       go to state 18
    assignment                 go to state 19
    function_declaration       go to state 20
    control_structure          go to state 21
    if_statement               go to state 22
    while_loop                 go to state 23
    for_loop                   go to state 24
    expression_statement       go to state 25
    print_statement            go to state 26
    return_statement           go to state 27
    expression                 go to state 28
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 95

   25 if_statement: IF expression statements END •

    $default  reduce using rule 25 (if_statement)


State 96

   27 while_loop: WHILE expression statements END •

    $default  reduce using rule 27 (while_loop)


State 97

   28 for_loop: FOR IDENTIFIER IN expression • statements END

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 3 (statements)

    statements                 go to state 104
    non_empty_statements       go to state 16
    statement                  go to state 17
    variable_declaration       go to state 18
    assignment                 go to state 19
    function_declaration       go to state 20
    control_structure          go to state 21
    if_statement               go to state 22
    while_loop                 go to state 23
    for_loop                   go to state 24
    expression_statement       go to state 25
    print_statement            go to state 26
    return_statement           go to state 27
    expression                 go to state 28
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 98

   20 parameter_list: IDENTIFIER •
   21               | IDENTIFIER • COMMA parameter_list

    COMMA  shift, and go to state 105

    $default  reduce using rule 20 (parameter_list)


State 99

   17 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list_opt • RPAREN statements END

    RPAREN  shift, and go to state 106


State 100

   19 parameter_list_opt: parameter_list •

    $default  reduce using rule 19 (parameter_list_opt)


State 101

   61 argument_list: expression COMMA argument_list •

    $default  reduce using rule 61 (argument_list)


State 102

   15 variable_declaration: LET IDENTIFIER IS expression SEMICOLON •

    $default  reduce using rule 15 (variable_declaration)


State 103

   26 if_statement: IF expression statements ELSE statements • END

    END  shift, and go to state 107


State 104

   28 for_loop: FOR IDENTIFIER IN expression statements • END

    END  shift, and go to state 108


State 105

   21 parameter_list: IDENTIFIER COMMA • parameter_list

    IDENTIFIER  shift, and go to state 98

    parameter_list  go to state 109


State 106

   17 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN • statements END

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    LET         shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    FUNCTION    shift, and go to state 7
    RETURN      shift, and go to state 8
    PRINT       shift, and go to state 9
    MINUS       shift, and go to state 10
    NOT         shift, and go to state 11
    SEMICOLON   shift, and go to state 12
    LPAREN      shift, and go to state 13

    $default  reduce using rule 3 (statements)

    statements                 go to state 110
    non_empty_statements       go to state 16
    statement                  go to state 17
    variable_declaration       go to state 18
    assignment                 go to state 19
    function_declaration       go to state 20
    control_structure          go to state 21
    if_statement               go to state 22
    while_loop                 go to state 23
    for_loop                   go to state 24
    expression_statement       go to state 25
    print_statement            go to state 26
    return_statement           go to state 27
    expression                 go to state 28
    logical_or_expression      go to state 29
    logical_and_expression     go to state 30
    equality_expression        go to state 31
    relational_expression      go to state 32
    additive_expression        go to state 33
    multiplicative_expression  go to state 34
    unary_expression           go to state 35
    primary_expression         go to state 36


State 107

   26 if_statement: IF expression statements ELSE statements END •

    $default  reduce using rule 26 (if_statement)


State 108

   28 for_loop: FOR IDENTIFIER IN expression statements END •

    $default  reduce using rule 28 (for_loop)


State 109

   21 parameter_list: IDENTIFIER COMMA parameter_list •

    $default  reduce using rule 21 (parameter_list)


State 110

   17 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements • END

    END  shift, and go to state 111


State 111

   17 function_declaration: FUNCTION IDENTIFIER LPAREN parameter_list_opt RPAREN statements END •

    $default  reduce using rule 17 (function_declaration)
