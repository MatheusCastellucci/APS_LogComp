<program>         ::= <statements>

<statements>      ::= <statement> | <statement> <statements>

<statement>       ::= <variable_declaration>
                    | <assignment>
                    | <function_declaration>
                    | <function_call>
                    | <if_statement>
                    | <while_loop>
                    | <print_statement>
                    | <return_statement>

<variable_declaration> ::= "let" <identifier> ["is" <expression>] ";"

<assignment>      ::= <identifier> "is" <expression> ";"

<function_declaration> ::= "function" <identifier> "(" [<parameter_list>] ")" <block>

<parameter_list>  ::= <identifier> | <identifier> "," <parameter_list>

<function_call>   ::= <identifier> "(" [<argument_list>] ")" ";"

<argument_list>   ::= <expression> | <expression> "," <argument_list>

<if_statement>    ::= "if" <expression> <block> ["else" <block>]

<while_loop>      ::= "while" <expression> <block>

<print_statement> ::= "print" <expression> ";"

<return_statement>::= "return" <expression> ";"

<block>           ::= "{" <statements> "}"

<expression>      ::= <expression> <addop> <term> | <term>
<term>            ::= <term> <mulop> <factor> | <factor>
<factor>          ::= "(" <expression> ")" | <number> | <identifier> | <function_call>

<addop>           ::= "+" | "-"
<mulop>           ::= "*" | "/"

<identifier>      ::= <letter> {<letter> | <digit>}
<number>          ::= <digit> {<digit>}

<letter>          ::= "a" | ... | "z" | "A" | ... | "Z"
<digit>           ::= "0" | ... | "9"
